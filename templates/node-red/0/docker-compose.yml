version: "2"
volumes:
  node-red-data:
    driver: ${volumedriver}
  maria-db-data:
    driver: ${volumedriver}
  mongo-db-data:
    driver: ${volumedriver}
services:
  node-red-stack-lb:
    image: rancher/lb-service-haproxy:v0.7.15
    ports:
    - 80:80/tcp
    labels:
      io.rancher.container.agent.role: environmentAdmin,agent
      io.rancher.container.agent_service.drain_provider: 'true'
      io.rancher.container.create_agent: 'true'
  node-red:
    container_name: node-red
    image: pnit/hh-node-red:latest
    restart: always
    volumes:
      - node-red-data:/data
    links:
      - maria-db
      - mongo-db
  maria-db:
    container_name: maria-db
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${password}
      MYSQL_DATABASE: ${db}
    volumes:
      - maria-db-data:/var/lib/mysql
  maria-db-management:
    container_name: maria-db-management
    image: adminer
    restart: always
    links:
      - maria-db:db
      - mongo-db:mongo
  mongo-db:
    container_name: mongo-db
    image: bitnami/mongodb:latest
    restart: always
    environment:
      MONGODB_ROOT_PASSWORD: ${password}
      MONGODB_USERNAME: ${username}
      MONGODB_PASSWORD: ${password}
      MONGODB_DATABASE: ${db}
    volumes:
      - mongo-db-data:/bitnami
  mongo-db-management:
    container_name: mongo-db-management
    image: pnit/adminmongo
    restart: always
    environment:
      DB_USERNAME: ${username}
      DB_PASSWORD: ${password}
      DB_HOST: mongo
      DB_NAME: ${db}
      CONN_NAME: mongo-db
    links:
      - mongo-db:mongo